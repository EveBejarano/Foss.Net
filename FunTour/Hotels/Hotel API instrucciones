//Para obtener las habitaciones disponibles por hotel entre ciertas fechas,
en cierta ciudad /api/Availability

{
	"City": "Corrientes",
	"Region": "Corrientes",
	"Country": "Argentina",
	"Date_start": "2018-06-07",
	"Date_end": "2018-06-08"

}

//Devuelve as√≠
[
    {
        "HotelID": 1,
        "HotelName": "Hotel1",
        "HotelAddress": "Calle Falsa 123",
        "HotelCity": "Corrientes",
        "HotelRegion": "Corrientes",
        "HotelCountry": "Argentina",
        "StandardRate": 1000,
        "FreeRoomCount": 4
    },
    {
        "HotelID": 2,
        "HotelName": "Hotel2",
        "HotelAddress": "Junin 332",
        "HotelCity": "Corrientes",
        "HotelRegion": "Corrientes",
        "HotelCountry": "Argentina",
        "StandardRate": 1200,
        "FreeRoomCount": 2
    }
]

//Para crear las reservas para ese hotel, tantas como se quieran /api/CreateBookings
{
	"HotelID": "2",
	"Date_start": "2018-06-07",
	"Date_end": "2018-06-08",
	"RoomCount": 2
}
//Devuelve asi. ID de las reservas creadas y el id del hotel para comprobar que sea para ese que elegiste. 

[
    {
        "BookingID": 29,
        "HotelID": 2
    },
    {
        "BookingID": 30,
        "HotelID": 2
    }
]

//Para actualizar la reserva cuando se paga /api/UpdateBooking
{
	"BookingID": 9,
	"GuestName": "Greg Velazquez",
	"GuestEmail": "greg@baconpancakes.com"
}
/*Si, identifica al cliente por nombre y mail, y si no lo tiene lo crea.
No es lo ideal pero eh.
Devuelve un ok o not found si no encuentra el ID*/